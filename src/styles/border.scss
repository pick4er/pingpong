@import 'styles/colors';

@for $i from 0 through 10 {
  $value: $i * 2px;

  .br#{$i} {
    border-radius: $value;

    &_tl {
      border-top-left-radius: $value;
    }

    &_tr {
      border-top-right-radius: $value;
    }

    &_br {
      border-bottom-right-radius: $value;
    }

    &_br {
      border-bottom-left-radius: $value;
    }
  }
}

@for $i from 0 through 10 {
  $offsetX: 0;
  $offsetY: $i * 2px;
  $blurRadius: $i * 5px;
  $color: rgba(0, 0, 0, 0.1);

  .sh#{$i} {
    box-shadow: $offsetX $offsetY $blurRadius $color;
  }
}

.border {
  border-radius: 5px;
  border: 1px solid $borderBlack;
  transition: border .3s ease;

  &:hover {
    border-color: $borderBlackHover;
  }

  &:focus {
    outline: none;
  }
}
@mixin border() {
  border-radius: 5px;
  border: 1px solid $borderBlack;
  transition: border .3s ease;

  &:hover {
    border-color: $borderBlackHover;
  }

  &:focus {
    outline: none;
  }
}

.border_error {
  border: 1px solid $errorRed;
  box-shadow: 0px 0px 5px $shadowRed;
  transition: border .3s ease;

  &:hover {
    border-color: $errorRed;
  }
}
@mixin borderError() {
  border: 1px solid $errorRed;
  box-shadow: 0px 0px 5px $shadowRed;
  transition: border .3s ease;

  &:hover {
    border-color: $errorRed;
  }
}

.border-separator_bottom {
  border-bottom: 1px solid $borderBlack;
}

.border-separator_top {
  border-top: 1px solid $borderBlack;
}

.shadow {
  box-shadow: 0px 1px 2px $shadowBlack;
  transition: box-shadow 0.3s ease;

  &:hover {
    box-shadow: 0px 1px 4px $shadowBlackHover;
  }
}

.border-shadow_grey_left {
  box-shadow: -10px 1px 18px 1px $gray;
  z-index: 1;
}

.list-separator_middle {
  height: 1px;
  background-color: $borderBlack;
  margin-top: 5px;
  margin-bottom: 5px;
}

.border-separator_left {
  border-left: 1px solid $borderBlack;
}